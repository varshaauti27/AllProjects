<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAYAAAAAABoAwAAFgAAACgAAAAQAAAAIAAAAAEAGAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAA
        AAAAAABEE48sCHMtCXYtCXgtCXgtCXYsCHNEE48AAAAAAAAAAAAAAAAAAAAAAAAAAABEE480C4Y3DZI6
        EJw3D5Y5D5o6D5w3DZEyCoIzDXYAAAAAAAAAAAAAAAAAAAAAAAAyCn42DY46EJw4D5gwJIsxEYY9EqY6
        D5w1DIstCnIAAAAAAAAAAAAAAAAAAAAAAABEE482DZE7EaAuCXo5g9EuMpU6EZ47EaE1DIsjGksARQAA
        RQAARQAARQAARQA0Xy4AAABEE481DY8mJYccXJkeSJAyE445D5koFl8VbRMSiAwThAwXdw0cZQ8jUhEA
        RQAzTHkPJlYbE2ckRZ0ga7QdZq0gOJMWElQHMSENgQoUdRMMjAkThAwYbw4eWRAARQACGlMAFEERQHcp
        d8Aod8Alc7seZqwGKFgBGi0lbCugwKUtgS0RiQwWcA0ARQAAAAACGVIDH1Ijaa8wg8svgsosfcUmdb0T
        TowBGy1CdXlUfqM1bnYHXwUARQAAAAAAAAADHFkLMnI0h884jtc2i9Qxhs4sfcUjb7YEIUsjbLAldLsf
        ZKUraZ0AAAAAAAAAAAAEH2YKLnQhX6std8E5jtU1itMugMkjbbQGKFYqd70tf8cpesIia7AraZ0AAAAA
        AAAzTHkMK3sJKYYKLYcTQpEmbLUjarAJL2gQPHA1iNA0iNAvgcooecEjbqwAAAAAAAAAAAAXOIsOMpwM
        L5UJKIEHJ3IFI2IBFkYtdrc+ld06j9g0h9AtfcYYaasAAAAAAAAAAAAzTHkMLIIOMpkJKIMFI24CHVgM
        Q3kiZZwrdLA0g8Y1idEse8EATXcAAAAAAAAAAAAAAABQa58zTHkzTHlQa58AAAAAd7gue7gsdrQmbKYj
        aaQcW5IATXcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAd7gAd7g2icosdrQfYpgWUoAATXcAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAd7gffr8PZaUKXZwATXcAAAAAAAAAAACAfwAAAD8AAAA/
        AAAAAAAAgAAAAAAAAAAAAQAAAAMAAAAHAAAAAwAAAAMAAIADAACAAwAAwgMAAP4DAAD/BwAA
</value>
  </data>
</root>